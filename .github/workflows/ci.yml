name: Bitrix Integration Suite CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint-typescript:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'typescript/package-lock.json'
          
      - name: Install TypeScript dependencies
        run: cd typescript && npm ci
        
      - name: Run ESLint
        run: cd typescript && npm run lint:check
        
      - name: Run Prettier check
        run: cd typescript && npm run format:check
        
      - name: TypeScript check
        run: cd typescript && npm run type-check

  lint-python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install Python dependencies
        run: |
          cd python
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
      - name: Run Ruff linter
        run: cd python && ruff check .
        
      - name: Run Black formatter check
        run: cd python && black --check .
        
      - name: Run MyPy type checker
        run: cd python && mypy . --ignore-missing-imports

  test-typescript:
    runs-on: ubuntu-latest
    needs: lint-typescript
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'typescript/package-lock.json'
          
      - name: Install dependencies
        run: cd typescript && npm ci
        
      - name: Run tests
        run: cd typescript && npm test
        
      - name: Generate coverage report
        run: cd typescript && npm run test:coverage
        
      - name: Upload TypeScript coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./typescript/coverage/lcov.info
          flags: typescript

  test-python:
    runs-on: ubuntu-latest
    needs: lint-python
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install dependencies
        run: |
          cd python
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          
      - name: Run tests with coverage
        run: cd python && pytest --cov=. --cov-report=xml --cov-report=html
        
      - name: Upload Python coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./python/coverage.xml
          flags: python

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'typescript/package-lock.json'
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          cd typescript && npm ci
          cd ../python && pip install safety bandit
          
      - name: Run npm audit
        run: cd typescript && npm audit --audit-level=moderate
        
      - name: Run Python safety check
        run: cd python && safety check
        
      - name: Run bandit security linter
        run: cd python && bandit -r . -f json -o bandit-report.json || true
        
      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript, python
          
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  build:
    runs-on: ubuntu-latest
    needs: [test-typescript, test-python]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'typescript/package-lock.json'
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Build TypeScript
        run: cd typescript && npm ci && npm run build
        
      - name: Build Python package
        run: |
          cd python
          python -m pip install --upgrade pip build
          python -m build
          
      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bitrix-integration-suite
          path: |
            typescript/dist/
            python/dist/

  deploy:
    runs-on: ubuntu-latest
    needs: [build, security]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy TypeScript to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: typescript

